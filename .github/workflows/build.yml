name: Build All Platforms
on: [push]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: |
          mkdir -p server/database
          mkdir -p server/uploads
          npm install
          npm run build -- --win
      - uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: dist/

  build-mac:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, macos-12]  # 双系统后备
    timeout-minutes: 30
    steps:
    # ===== 1. 排队检测 =====
    - name: Check Queue Status
      id: queue-check
      uses: actions/github-script@v6
      with:
        script: |
          const { data: runs } = await github.rest.actions.listWorkflowRuns({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'build.yml',
            status: 'queued',
            per_page: 5
          });
          
          if (runs.length > 3) {  # 如果队列过长
            console.log('检测到排队拥堵，触发自动重试策略');
            await github.rest.actions.reRunWorkflowFailedJobs({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId
            });
            return 'retry';
          }
          return 'continue';
    
    # ===== 2. 正常构建流程 =====
    - name: Setup Node
      if: steps.queue-check.outputs.result == 'continue'
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
    
    - name: Build App
      if: steps.queue-check.outputs.result == 'continue'
      run: |
        mkdir -p www
        cp -R src/* www/
        npm ci
        npm run build -- --mac
        
    # ===== 3. 公证处理 =====  
    - name: Notarize
      if: steps.queue-check.outputs.result == 'continue'
      env:
        AC_PASSWORD: ${{ secrets.AC_PASSWORD }}
      run: |
        cat <<EOF > gon.json
        {
          "source": ["dist/mac/*.app"],
          "bundle_id": "com.example.quotation",
          "apple_id": {
            "username": "2441686096@qq.com",
            "password": "@env:AC_PASSWORD"
          }
        }
        EOF
        brew install gon
        gon --fast gon.json
        
    # ===== 4. 自动重试触发器 =====
    - name: Trigger Retry
      if: failure() || steps.queue-check.outputs.result == 'retry'
      uses: actions/github-script@v6
      with:
        script: |
          await new Promise(resolve => setTimeout(resolve, 300000)); // 等待5分钟
          await github.rest.actions.reRunWorkflowFailedJobs({
            owner: context.repo.owner,
            repo: context.repo.repo,
            run_id: context.runId
          });

  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: |
          mkdir -p www
          cp -R src/* www/ || true
          echo '{
          "appId": "com.example.quotation",
          "appName": "报价单系统",
          "webDir": "www"
          }' > capacitor.config.json
          npm install
          npx cap add android
          npx cap sync
          cd android && ./gradlew assembleDebug
      - uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: android/app/build/outputs/apk/debug/
name: Build All Platforms
on: [push]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
         node-version: 20
      - run: |
          mkdir -p server/database
          mkdir -p server/uploads
          npm install
          npm run build -- --win
      - uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: dist/

  build-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: |
          mkdir -p www
          cp -R src/* www/ || xcopy /E /Y src\\* www\\ 
          npm install
          npm run build -- --mac
      - uses: actions/upload-artifact@v4
        with:
          name: mac-build
          path: dist/

  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: |
          mkdir -p www
          cp -R src/* www/ || true
          echo '{
          "appId": "com.example.quotation",
          "appName": "报价单系统",
          "webDir": "www"
          }' > capacitor.config.json
          npm install
          npx cap add android
          npx cap sync
          cd android && ./gradlew assembleDebug
      - uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: android/app/build/outputs/apk/debug/


  build-ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Ensure Config Exists
        run: |
          if [ ! -f "capacitor.config.json" ]; then
            echo '{
              "appId": "com.example.quotation",
              "appName": "报价单系统",
              "webDir": "www",
              "bundledWebRuntime": false
            }' > capacitor.config.json
          fi

      - name: Setup Environment
        run: |
          # 安装系统级必要工具
          brew install cocoapods || true
          sudo gem install cocoapods -v 1.11.3
      
      - name: Build Process
        run: |
          # 1. 彻底清理环境
          rm -rf www ios/android node_modules/.cache
    
          # 2. 重建目录结构
          mkdir -p www
          [ -d "src" ] && cp -R src/* www/ || { echo "Error: src directory missing"; exit 1; }

          # 3. 初始化前确保必要依赖存在 (关键修复)
          npm install -g @capacitor/cli@5.7.8
          npm install \
            @capacitor/core@5.7.8 \
            @capacitor/ios@5.7.8 \
            --save-exact --no-package-lock --force

          # 4. 双重初始化机制
          if [ ! -f "capacitor.config.json" ]; then
            npx cap init "报价单系统" "com.example.quotation" --web-dir www
          else
            npx cap sync
          fi

          # 5. 平台添加安全机制
          if [ ! -d "ios" ]; then
            echo "Adding iOS platform with retry..."
            npx cap add ios || {
              sleep 5
              npx cap add ios || exit 1
            }
          fi

          # 6. 最终同步
          npx cap sync

          # 7. 智能Pod安装 (带三重重试)
          cd ios/App || cd ios
          for i in {1..3}; do
            pod install --repo-update && break
            sleep $((i*2))
            [ $i -eq 3 ] && exit 1
          done
          cd ../..

      - name: Build Without Team ID
        run: |
            # 1. 彻底禁用签名（修改工程文件）
            plutil -replace provisioningStyle -string "Manual" ios/App/App.xcodeproj/project.pbxproj
            sed -i '' 's/DEVELOPMENT_TEAM = .*;//' ios/App/App.xcodeproj/project.pbxproj
            sed -i '' 's/PROVISIONING_PROFILE_SPECIFIER = .*;//' ios/App/App.xcodeproj/project.pbxproj
        
            # 2. 创建免签名配置
            echo '<?xml version="1.0"?>
            <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
            <plist version="1.0">
            <dict>
                <key>compileBitcode</key>
                <false/>
                <key>method</key>
                <string>development</string>
                <key>signingStyle</key>
                <string>manual</string>
                <key>stripSwiftSymbols</key>
                <true/>
            </dict>
            </plist>' > exportOptions.plist
        
            # 3. 构建命令（关键参数）
            xcodebuild -workspace ios/App/App.xcworkspace \
                      -scheme App \
                      -configuration Debug \
                      -archivePath build/App.xcarchive \
                      CODE_SIGN_IDENTITY="" \
                      CODE_SIGNING_REQUIRED=NO \
                      CODE_SIGNING_ALLOWED=NO \
                      DEVELOPMENT_TEAM="" \
                      PROVISIONING_PROFILE="" \
                      archive || true
        
            # 4. 导出未签名IPA
            xcodebuild -exportArchive \
                      -archivePath build/App.xcarchive \
                      -exportOptionsPlist exportOptions.plist \
                      -exportPath build/ipa \
                      -allowProvisioningUpdates

      - name: Build IPA
        timeout-minutes: 30
        run: |
          WORKSPACE=$(find ios -name "*.xcworkspace" -maxdepth 2 | head -1)
          xcodebuild -workspace "$WORKSPACE" \
                    -scheme App \
                    -archivePath build/App.xcarchive \
                    -allowProvisioningUpdates \
                    archive

          xcodebuild -exportArchive \
                    -archivePath build/App.xcarchive \
                    -exportOptionsPlist ios/App/exportOptions.plist \
                    -exportPath build/ipa

      - uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: build/ipa  # 修正为实际输出路径
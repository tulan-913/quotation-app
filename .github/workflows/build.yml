name: Build All Platforms
on: [push]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
         node-version: 20
      - run: |
          mkdir -p server/database
          mkdir -p server/uploads
          npm install
          npm run build -- --win
      - uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: dist/

  build-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: |
          mkdir -p www
          cp -R src/* www/ || xcopy /E /Y src\\* www\\ 
          npm install
          npm run build -- --mac
      - uses: actions/upload-artifact@v4
        with:
          name: mac-build
          path: dist/

  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: |
          mkdir -p www
          cp -R src/* www/ || true
          echo '{
          "appId": "com.example.quotation",
          "appName": "报价单系统",
          "webDir": "www"
          }' > capacitor.config.json
          npm install
          npx cap add android
          npx cap sync
          cd android && ./gradlew assembleDebug
      - uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: android/app/build/outputs/apk/debug/


  build-ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: 安装必要依赖
        run: |
          npm install -g @capacitor/cli@latest
          npm install
          
      - name: 确保配置文件存在
        run: |
          if [ ! -f "capacitor.config.json" ]; then
            echo '{
              "appId": "com.example.quotation",
              "appName": "报价单系统",
              "webDir": "www",
              "bundledWebRuntime": false
            }' > capacitor.config.json
          fi
          
      - name: 准备构建目录
        run: |
          # 清理并创建www目录
          rm -rf www || true
          mkdir -p www
          
          # 复制文件
          if [ -d "dist" ]; then
            cp -R dist/* www/
          elif [ -d "src" ]; then
            cp -R src/* www/
          else
            echo "错误：找不到源文件目录"
            exit 1
          fi
          
      - name: 初始化Capacitor
        run: |
          # 如果已有配置文件则跳过init
          if [ ! -f "capacitor.config.json" ]; then
            npx cap init "报价单系统" "com.example.quotation" --web-dir www
          fi
          
          # 添加iOS平台
          npx cap add ios
          
          # 同步项目
          npx cap sync ios
          
      - name: 安装iOS依赖
        run: |
          cd ios/App
          pod install
          cd ../..
          
      - name: 构建IPA
        run: |
          xcodebuild -workspace ios/App/App.xcworkspace \
                    -scheme App \
                    -configuration Release \
                    -archivePath build/App.xcarchive \
                    archive
          xcodebuild -exportArchive \
                    -archivePath build/App.xcarchive \
                    -exportOptionsPlist ios/App/exportOptions.plist \
                    -exportPath build/ipa
                    
      - uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: ios/build/ipa
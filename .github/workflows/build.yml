name: Build All Platforms
on: [push]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: |
          mkdir -p server/database
          mkdir -p server/uploads
          npm install
          npm run build -- --win
      - uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: dist/

  build-mac:
    runs-on: macos-latest
    timeout-minutes: 45
    
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          brew tap mitchellh/gon
          brew install gon
          brew install jq  # 安装JSON处理工具

      - name: Build App
        run: |
          mkdir -p www
          cp -R src/* www/ || true
          npm ci
          npm run build -- --mac
          
          # 统一应用包路径（兼容不同electron-builder版本）
          if [ -d "dist/mac-arm64" ]; then
            mv "dist/mac-arm64/报价单系统.app" "dist/" || true
          fi

      - name: Prepare for Notarization
        id: prepare
        run: |
          # 精确查找应用包路径
          APP_PATH=$(find dist -name "*.app" -type d -print -quit)
          echo "Found app at: $APP_PATH"
          echo "APP_PATH=${APP_PATH}" >> $GITHUB_OUTPUT
          
          # 生成绝对正确的gon.json
          cat <<EOF > gon.json
          {
            "source": ["${APP_PATH}"],
            "bundle_id": "com.example.quotation",
            "apple_id": {
              "username": "2441686096@qq.com",
              "password": "@env:AC_PASSWORD"
            },
            "notarize": {
              "timeout": 1200,
              "verbose": true
            }
          }
          EOF
          
          # 验证JSON格式
          jq . gon.json
          echo "Gon config:"
          cat gon.json

      - name: Notarize App
        env:
          AC_PASSWORD: ${{ secrets.AC_PASSWORD }}
        run: |
          APP_PATH="${{ steps.prepare.outputs.APP_PATH }}"
          
          # 确保应用包存在
          if [ ! -d "$APP_PATH" ]; then
            echo "::error::App bundle not found at: $APP_PATH"
            ls -R dist/
            exit 1
          fi
          
          # 带重试的公证流程
          for i in {1..3}; do
            echo "Attempt $i/3"
            if gon gon.json; then
              echo "Notarization succeeded"
              exit 0
            fi
            sleep 10
          done
          
          echo "::error::All notarization attempts failed"
          exit 1

      - uses: actions/upload-artifact@v4
        with:
          name: mac-build
          path: dist/

  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: |
          mkdir -p www
          cp -R src/* www/ || true
          echo '{
          "appId": "com.example.quotation",
          "appName": "报价单系统",
          "webDir": "www"
          }' > capacitor.config.json
          npm install
          npx cap add android
          npx cap sync
          cd android && ./gradlew assembleDebug
      - uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: android/app/build/outputs/apk/debug/
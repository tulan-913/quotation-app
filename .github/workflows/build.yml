name: Build All Platforms
on: [push]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: |
          mkdir -p server/database
          mkdir -p server/uploads
          npm install
          npm run build -- --win
      - uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: dist/

  build-mac:
    runs-on: macos-latest
    timeout-minutes: 45
    
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # 安装 gon 的正确方式
      - name: Install gon (correct method)
        run: |
          brew tap mitchellh/gon
          brew install mitchellh/gon/gon

      # 构建步骤（带步骤级超时）
      - name: Build App
        timeout-minutes: 25
        run: |
          mkdir -p www
          cp -R src/* www/ || true
          npm install
          npm run build -- --mac

          # 验证.app文件生成
          if [ ! -d "dist/mac/"*.app ]; then
            echo "生成的.app文件路径："
            find dist -name "*.app" -print
            exit 1
          fi
          
      # 公证步骤
      - name: Notarize App
        env:
          AC_PASSWORD: ${{ secrets.AC_PASSWORD }}
        run: |
          # 动态获取.app文件路径
          APP_PATH=$(find dist -name "*.app" -print -quit)
          if [ -z "$APP_PATH" ]; then
            echo "错误：未找到.app文件"
            find dist -type d -print
            exit 1
          fi

          # 生成公证配置
          cat <<EOF > gon.json
          {
            "source": ["$APP_PATH"],
            "bundle_id": "com.example.quotation",
            "apple_id": {
              "username": "2441686096@qq.com",
              "password": "@env:AC_PASSWORD"
            },
            "notarize": {
              "timeout": 600,
            }
          }
          EOF
          
          echo "使用的公证配置："
          cat gon.json

          # 执行公证（带调试）
          gon -log-level=debug gon.json || {
            echo "公证失败，尝试应急处理..."
            # 应急签名
            codesign --force --deep --sign - "$APP_PATH"
            xattr -cr "$APP_PATH"
            # 验证
            spctl -a -v "$APP_PATH" || true
          }

      - uses: actions/upload-artifact@v4
        with:
          name: mac-build
          path: dist/

  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: |
          mkdir -p www
          cp -R src/* www/ || true
          echo '{
          "appId": "com.example.quotation",
          "appName": "报价单系统",
          "webDir": "www"
          }' > capacitor.config.json
          npm install
          npx cap add android
          npx cap sync
          cd android && ./gradlew assembleDebug
      - uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: android/app/build/outputs/apk/debug/
name: Build All Platforms
on: [push]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: |
          mkdir -p server/database
          mkdir -p server/uploads
          npm install
          npm run build -- --win
      - uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: dist/

  build-mac:
    runs-on: macos-latest
    timeout-minutes: 45
    
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      # 安装 gon 的正确方式
      - name: Install gon (correct method)
        run: |
          brew tap mitchellh/gon
          brew install mitchellh/gon/gon

      # 构建步骤
      - name: Build App
        run: |
          mkdir -p www server/database server/uploads
          cp -R src/* www/ || true
          
          # 强制清理旧构建
          rm -rf dist/mac*
          
          npm ci
          npm run build -- --mac
          
          # 修复路径：重命名输出目录（适配electron-builder 24+）
          if [ -d "dist/mac-arm64" ]; then
            mv dist/mac-arm64 dist/mac
          fi
          
      # 公证步骤
      - name: Notarize App
        env:
          AC_PASSWORD: ${{ secrets.AC_PASSWORD }}
        run: |
          # 1. 清理旧构建 
          rm -rf dist/mac*
          mkdir -p dist/mac 
          
          # 2. 定位.app文件（处理中文路径）
          APP_PATH=$(find dist/mac -name "*.app" -print0 | xargs -0)
          export LANG=en_US.UTF-8  # 强制UTF-8编码 
          
          # 3. 生成防干扰配置（单引号包裹变量）
          cat <<'EOF' > gon.json  
          {
            "source": ["'${APP_PATH}'"],
            "bundle_id": "com.example.quotation", 
            "apple_id": {
              "username": "2441686096@qq.com", 
              "password": "'${AC_PASSWORD}'"
            },
            "notarize": {
              "timeout": 900 
            }
          }
          EOF 
          
          # 4. 彻底重签名 
          find "${APP_PATH}" -name "_CodeSignature" -exec rm -rf {} +
          codesign --force --deep --sign "你的开发者ID" \
            --timestamp --options runtime \
            --entitlements entitlements.plist  \
            "${APP_PATH}"
          
          # 5. 执行公证（输出详细日志）
          gon -log-level=trace gon.json  2>&1 | tee notarize.log  
          
          # 6. 失败时应急处理 
          if [ $? -ne 0 ]; then 
            codesign --force --deep --sign - "${APP_PATH}"
            xattr -cr "${APP_PATH}"
            spctl --add --label "MyApp" "${APP_PATH}"
          fi 

      - uses: actions/upload-artifact@v4
        with:
          name: mac-build
          path: dist

  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: |
          mkdir -p www
          cp -R src/* www/ || true
          echo '{
          "appId": "com.example.quotation",
          "appName": "报价单系统",
          "webDir": "www"
          }' > capacitor.config.json
          npm install
          npx cap add android
          npx cap sync
          cd android && ./gradlew assembleDebug
      - uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: android/app/build/outputs/apk/debug/
name: Build All Platforms
on: [push]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: |
          mkdir -p server/database
          mkdir -p server/uploads
          npm install
          npm run build -- --win
      - uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: dist/

  build-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: |
          mkdir -p www
          cp -R src/* www/ || xcopy /E /Y src\\* www\\ 
          npm install
          npm run build -- --mac
      - uses: actions/upload-artifact@v4
        with:
          name: mac-build
          path: dist/

  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: |
          mkdir -p www
          cp -R src/* www/ || true
          echo '{
          "appId": "com.example.quotation",
          "appName": "报价单系统",
          "webDir": "www"
          }' > capacitor.config.json
          npm install
          npx cap add android
          npx cap sync
          cd android && ./gradlew assembleDebug
      - uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: android/app/build/outputs/apk/debug/


  build-ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      
      # 1. 确保配置文件和目录结构
      - name: Setup Environment
        run: |
          # 生成必要配置文件
          echo '{
            "appId": "com.example.quotation",
            "appName": "报价单系统",
            "webDir": "www",
            "bundledWebRuntime": false
          }' > capacitor.config.json
          
          # 创建www目录（兼容空目录情况）
          mkdir -p www
          [ "$(ls -A src)" ] && cp -R src/* www/ || echo "src目录为空，跳过复制"
          
          # 验证目录结构
          echo "项目结构："
          ls -la
          echo "www内容："
          ls -la www/
      
      # 2. 构建流程
      - name: Build Process
        run: |
          # 初始化Capacitor（强制模式）
          npx cap init --force --web-dir www --npm-client npm
          
          # 添加iOS平台
          npx cap add ios
          
          # 安装iOS依赖
          cd ios/App
          pod install
          cd ../..
      
      # 3. 构建IPA（保持不变）
      - name: Build IPA
        run: |
          xcodebuild -workspace ios/App/App.xcworkspace \
                    -scheme App \
                    -configuration Release \
                    -archivePath build/App.xcarchive \
                    archive
          xcodebuild -exportArchive \
                    -archivePath build/App.xcarchive \
                    -exportOptionsPlist ios/App/exportOptions.plist \
                    -exportPath build/ipa
      
      - uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: ios/build/ipa
      
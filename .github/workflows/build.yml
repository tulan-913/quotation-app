name: Build All Platforms
on: [push]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ELECTRON_BUILDER_ALLOW_UNRESOLVED_DEPENDENCIES: true

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: |
          mkdir -p server/database
          mkdir -p server/uploads
          npm install
          npm run build -- --win
      - uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: dist/

  build-mac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: |
          mkdir -p www
          cp -R src/* www/ || xcopy /E /Y src\\* www\\ 
          npm install
          npm run build -- --mac
      - uses: actions/upload-artifact@v4
        with:
          name: mac-build
          path: dist/

  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: |
          mkdir -p www
          cp -R src/* www/ || true
          echo '{
          "appId": "com.example.quotation",
          "appName": "报价单系统",
          "webDir": "www"
          }' > capacitor.config.json
          npm install
          npx cap add android
          npx cap sync
          cd android && ./gradlew assembleDebug
      - uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: android/app/build/outputs/apk/debug/


  build-ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      
      # 1. 准备环境
      - name: Prepare Environment
        run: |
          mkdir -p www
          cp -R src/* www/ || echo "跳过复制（src可能为空）"
          echo '{
            "appId": "com.example.quotation",
            "appName": "报价单系统",
            "webDir": "www",
            "bundledWebRuntime": false
          }' > capacitor.config.json
      
      # 2. 安装依赖 & 同步 iOS 项目
      - name: Install & Sync
        run: |
          npm install
          npx cap add ios
          npx cap sync
          cd ios/App
          pod install
          cd ../..
      
      # 3. 禁用代码签名（关键步骤！）
      - name: Disable Code Signing
        run: |
          cd ios/App
          # 直接修改 Xcode 项目配置，禁用签名
          sed -i '' 's/CODE_SIGNING_ALLOWED = YES/CODE_SIGNING_ALLOWED = NO/g' App.xcodeproj/project.pbxproj
          sed -i '' 's/CODE_SIGNING_REQUIRED = YES/CODE_SIGNING_REQUIRED = NO/g' App.xcodeproj/project.pbxproj
          sed -i '' 's/PROVISIONING_PROFILE_SPECIFIER = "";//g' App.xcodeproj/project.pbxproj
          cd ../..
      
      # 4. 构建未签名的 IPA（不触发签名）
      - name: Build Unsigned IPA
        run: |
          xcodebuild -workspace ios/App/App.xcworkspace \
                    -scheme App \
                    -configuration Release \
                    -archivePath build/App.xcarchive \
                    -destination "generic/platform=iOS" \
                    CODE_SIGNING_ALLOWED=NO \
                    CODE_SIGNING_REQUIRED=NO \
                    archive
          
          xcodebuild -exportArchive \
                    -archivePath build/App.xcarchive \
                    -exportOptionsPlist ios/App/exportOptions.plist \
                    -exportPath build/ipa \
                    CODE_SIGNING_ALLOWED=NO \
                    CODE_SIGNING_REQUIRED=NO
      
      # 5. 上传未签名的 IPA（供本地签名）
      - uses: actions/upload-artifact@v4
        with:
          name: ios-unsigned-ipa
          path: ios/build/ipa
      